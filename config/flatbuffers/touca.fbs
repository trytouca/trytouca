// Copyright 2022 Touca, Inc. Subject to Apache-2.0 License.

namespace touca.fbs;

union Type {
  Bool,
  Int,
  UInt,
  Float,
  Double,
  String,
  Object,
  Array,
  Blob
}

enum ComparisonRuleMode:uint8 { Absolute, Relative }

table ComparisonRuleDouble {
  mode:ComparisonRuleMode;
  max:float64 = null;
  min:float64 = null;
  percent:bool = null;
}

table TypeWrapper {
  value:Type;
}

table Bool {
  value:bool;
}

table Int {
  value:int64;
}

table UInt {
  value:uint64;
}

table Float {
  value:float32;
}

table Double {
  value:float64;
  rule:ComparisonRuleDouble; // v1.8.1-
}

table String {
  value:string;
}

table ObjectMember {
  name:string;
  value:TypeWrapper;
}

table Object {
  key:string;
  values:[ObjectMember];
}

table Array {
  values:[TypeWrapper];
}

table Blob {
  digest:string;
  mimetype:string;
  reference:string;
}

enum ResultType:uint8 { Check = 1, Assert }

table Result {
  key:string;
  value:TypeWrapper;
  typ:ResultType = Check; // v1.4.0-
}

table Assertion {
  key:string (deprecated); // -v1.4.0
  value:TypeWrapper (deprecated); // -v1.4.0
}

table Metric {
  key:string;
  value:TypeWrapper;
}

table Results {
  entries:[Result];
}

table Assertions {
  entries:[Assertion] (deprecated); // -v1.4.0
}

table Metrics {
  entries:[Metric];
}

table Metadata {
  testsuite:string;
  version:string;
  hostname:string (deprecated); // -v1.2.0
  testcase:string;
  builtAt:string;
  teamslug:string; // v1.2.0-
}

table Message {
  metadata:Metadata;
  results:Results;
  assertions:Assertions (deprecated); // -v1.4.0
  metrics:Metrics;
}

table MessageBuffer {
  buf:[uint8] (nested_flatbuffer: "Message");
}

table Messages {
  messages:[MessageBuffer];
}

root_type Messages;
